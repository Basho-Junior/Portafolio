<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>