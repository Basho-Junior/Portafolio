<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwg
        JC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCADRAOYDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDsKKDSUwDvRRRQA0mm5pzUygB4NOqIGnA0APopBTjjFAgoqOKe
        GYkxyq56EA088c0gFpO9A6daO9ABRSE0maYBS0hNApAOFPXpTKUUAPpM0UCgBw6UUUUwCilooASilooA
        TFFLRQBEaMUHrRQMSjH4fWmzEiJiM5xxiuci19vO2M6sQfu55oFc6MrnuKjPFVYNUgnwDhCemamLA8qc
        g96AuP8AelBqIMSBjv0pVPNAycdefSoL+XyrGRu5GBUgORVDWZMQRoO9AmeZadq1xpviW7sHmfa0hKMT
        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
</value>
  </data>
</root>