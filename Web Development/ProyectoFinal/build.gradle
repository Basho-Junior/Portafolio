plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id 'idea'
    id "com.google.protobuf" version "0.8.19"
}

group 'Proyecto'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

mainClassName='Proyecto.main'

dependencies {
    //Libreria test
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'

    //dependencia de Javalin
    implementation 'io.javalin:javalin:4.6.1'

    //manejo de log.
    implementation "org.slf4j:slf4j-simple:1.7.36"

    //libreria jsoup.
    implementation group: 'org.jsoup', name: 'jsoup', version: '1.14.3'

    //Procesamiento JSON.
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.3'

    //Agregando el OpenApi3
    implementation 'io.javalin:javalin-openapi:4.6.4'

    //sistemas de plantilla:
    implementation 'org.freemarker:freemarker:2.3.31'
    implementation 'org.thymeleaf:thymeleaf:3.0.15.RELEASE'
    implementation 'org.apache.velocity:velocity-engine-core:2.3'

    //libreria para SOAP de Jetty https://mvnrepository.com/artifact/org.eclipse.jetty/jetty-http-spi
    implementation group: 'org.eclipse.jetty', name: 'jetty-http-spi', version: '11.0.9'

    //incluyendo las librerias de jakarta.ee en java 11.
    //https://www.baeldung.com/java-soap-web-service
    implementation 'jakarta.xml.ws:jakarta.xml.ws-api:4.0.0'
    implementation 'com.sun.xml.ws:jaxws-rt:4.0.0'
    implementation 'com.sun.xml.ws:jaxws-ri:4.0.0'

    implementation 'com.h2database:h2:2.1.214'
    implementation 'org.jasypt:jasypt:1.9.3'

    implementation 'org.hibernate:hibernate-core:6.1.1.Final'
    implementation 'org.hibernate:hibernate-entitymanager:5.6.10.Final'

    implementation 'org.postgresql:postgresql:42.3.6'

    implementation 'org.jasypt:jasypt:1.9.3'
    implementation 'com.google.code.gson:gson:2.9.0'

    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-gson:0.11.0'
    runtimeOnly("io.jsonwebtoken:jjwt-impl:0.11.2")
    runtimeOnly("io.jsonwebtoken:jjwt-jackson:0.11.2")

    implementation 'io.grpc:grpc-netty-shaded:1.48.0'
    implementation 'io.grpc:grpc-protobuf:1.48.0'
    implementation 'io.grpc:grpc-stub:1.48.0'
    implementation 'com.google.protobuf:protobuf-java:3.21.4'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    implementation 'com.konghq:unirest-java:3.13.10'

}

shadowJar{
    archivesBaseName = 'app'
    archiveClassifier = ''
    archiveVersion = ''
}

task stage {
    dependsOn shadowJar
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.17.2"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.39.0'
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }

    generatedFilesBaseDir = "$projectDir/gen"
}
clean {
    delete protobuf.generatedFilesBaseDir
}
idea {
    module {
        sourceDirs += file("gen");
    }
}